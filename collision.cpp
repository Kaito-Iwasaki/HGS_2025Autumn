//=====================================================================
// 
// 衝突判定 [collision.cpp]
// Author : Kaito Iwasaki
//
//=====================================================================

//*********************************************************************
// 
// ***** インクルードファイル *****
// 
//*********************************************************************
#include "collision.h"

//*********************************************************************
// 
// ***** マクロ定義 *****
// 
//*********************************************************************


//*********************************************************************
// 
// ***** グローバル変数 *****
// 
//*********************************************************************


//*********************************************************************
// 
// ***** プロトタイプ宣言 *****
// 
//*********************************************************************


//=====================================================================
// 衝突判定処理｜矩形
//=====================================================================
bool BoxCollision(BASEOBJECT objA, BASEOBJECT objB)
{
	if (
		objA.pos.x >= (objB.pos.x - objB.size.x / 2 - objA.size.x / 2)
		&& objA.pos.x <= (objB.pos.x + objB.size.x / 2 + objA.size.x / 2)
		&& objA.pos.y >= (objB.pos.y - objB.size.y / 2 - objA.size.y / 2)
		&& objA.pos.y <= (objB.pos.y + objB.size.y / 2 + objA.size.y / 2)
		)
	{
		return true;
	}

	return false;
}

//=====================================================================
// 衝突判定処理｜矩形（位置、サイズ指定）
//=====================================================================
bool BoxCollision(D3DXVECTOR3 posA, D3DXVECTOR3 sizeA, D3DXVECTOR3 posB, D3DXVECTOR3 sizeB)
{
	if (
		posA.x >= (posB.x - sizeB.x / 2 - sizeA.x / 2)
		&& posA.x <= (posB.x + sizeB.x / 2 + sizeA.x / 2)
		&& posA.y >= (posB.y - sizeB.y / 2 - sizeA.y / 2)
		&& posA.y <= (posB.y + sizeB.y / 2 + sizeA.y / 2)
		)
	{
		return true;
	}

	return false;
}
