//=====================================================================
//
// 画面処理 [baseScene.cpp]
// Author : Kaito Iwasaki
// 
//=====================================================================

//*********************************************************************
// 
// ***** インクルードファイル *****
// 
//*********************************************************************
#include "baseScene.h"
#include "sound.h"
#include "input.h"
#include "fade.h"

// シーン
#include "title.h"
#include "game.h"
#include "result.h"
#include "endless.h"

//*********************************************************************
// 
// ***** グローバル変数 *****
// 
//*********************************************************************
SCENE g_currentScene = SCENE_TITLE;		// 現在のシーン

//*********************************************************************
// 各シーンの処理関数
//*********************************************************************
SCENEDATA g_scenes[SCENE_MAX] = {
	InitTitle, UninitTitle, UpdateTitle, DrawTitle,			// タイトル画面
	InitGame, UninitGame, UpdateGame, DrawGame,				// ゲーム画面
	InitResult, UninitResult, UpdateResult, DrawResult,			// ゲーム画面
	InitEndless, UninitEndless, UpdateEndless, DrawEndless,		// ゲーム画面
};

//=====================================================================
// 初期化処理
//=====================================================================
void InitScene(void)
{
	// フェード＆シーンの初期化処理
	InitFade(g_currentScene);
}

//=====================================================================
// 終了処理
//=====================================================================
void UninitScene(void)
{
	// 各シーンの終了処理
	for (int nCount = 0; nCount < SCENE_MAX; nCount++)
	{
		g_scenes[nCount].Uninit();
	}

	// フェードのの終了処理
	UninitFade();
}

//=====================================================================
// 更新処理
//=====================================================================
void UpdateScene(void)
{
	// 現在のシーンの更新処理
	g_scenes[g_currentScene].Update();

	// フェードの更新処理
	UpdateFade();
}

//=====================================================================
// 描画処理
//=====================================================================
void DrawScene(void)
{
	// 現在のシーンの描画処理
	g_scenes[g_currentScene].Draw();

	// フェードの描画処理
	DrawFade();
}

//=====================================================================
// シーン設定処理
//=====================================================================
SCENE SetScene(SCENE nextScene, bool bStopSound)
{
	// 現在のシーンを終了
	g_scenes[g_currentScene].Uninit();

	// 新規シーンを初期化
	g_scenes[nextScene].Init();

	// 新規シーンを現在のシーンに設定
	g_currentScene = nextScene;

	return g_currentScene;
}

SCENE GetCurrentScene(void)
{
	return g_currentScene;
}
